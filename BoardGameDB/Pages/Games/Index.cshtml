@page
@model BoardGameDB.Pages_Games.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a class="btn btn-primary bgdb-center" asp-page="Create">Create New</a>
</p>

@{
    var filterDisplay = Model.Filter.IsDirty ? "block" : "none";
    var filterPromptDisplay = Model.Filter.IsDirty ? "none" : "block";
}
<div id="filter-box" class="bgdb-form-container" style="display: @filterDisplay">
    <form>
        <div class="input-group mb-3">
            <label class="input-group-text">Title</label>
            <input class="form-control" type="text" asp-for="Filter.Title" />
        </div>
        <div class="input-group mb-3">
            <span class="input-group-text">Complexity</span>
            <select class="form-control bgdb-min" asp-for="Filter.ComplexityString"
                asp-items="@Model.ComplexityListItems"></select>
        </div>
        <div class="input-group mb-3">
            <span class="input-group-text">Player Count</span>
            <input class="form-control bgdb-min" type="number" asp-for="Filter.PlayerCount" />
        </div>
        <div class="input-group mb-3">
            <span class="input-group-text">Play Time</span>
            <select class="form-control bgdb-min" type="number" asp-for="Filter.PlayTimeRangeString"
                asp-items="Model.Filter.PlayTimeRangeListItems"></select>
        </div>
        <div class="input-group mb-3">
            <label class="input-group-text">Mechanics</label>
            <div class="form-control">
                <input id="filter_mechanics_list" class="bgdb-suggestion-input" type="text"
                    asp-for="Filter.MechanicsListString" autocomplete="off"
                    placeholder="List of mechanics separated by ';'" /><span id="filter_mechanics_list_suggestion"
                    class="bgdb-suggestion-input"></span>
            </div>
            <div class="input-group-text">
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.Filter.MechanicsListCombinationOperation, "And", new
                    {@class="form-check-input", @id="mechanics_list_combination_operation_and"})
                    <label class="form-check-label" for="mechanics_list_combination_operation_and">And</label>
                </div>
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.Filter.MechanicsListCombinationOperation, "Or", new
                    {@class="form-check-input", @id="mechanics_list_combination_operation_or"})
                    <label class="form-check-label" for="mechanics_list_combination_operation_or">Or</label>
                </div>
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.Filter.MechanicsListCombinationOperation, "None", new
                    {@class="form-check-input", @id="mechanics_list_combination_operation_none"})
                    <label class="form-check-label" for="mechanics_list_combination_operation_none">None</label>
                </div>
            </div>
        </div>
        <div class="input-group mb-3">
            <label class="input-group-text">Play Styles</label>
            <div class="form-control">
                <input id="filter_play_styles_list" class="bgdb-suggestion-input" type="text"
                    asp-for="Filter.PlayStylesListString" autocomplete="off"
                    placeholder="List of play styles separated by ';'" /><span id="filter_play_styles_list_suggestion"
                    class="bgdb-suggestion-input"></span>
            </div>
            <div class="input-group-text">
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.Filter.PlayStylesCombinationOperation, "And", new
                    {@class="form-check-input", @id="play_styles_list_combination_operation_and"})
                    <label class="form-check-label" for="play_styles_list_combination_operation_and">And</label>
                </div>
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.Filter.PlayStylesCombinationOperation, "Or", new
                    {@class="form-check-input", @id="play_styles_list_combination_operation_or"})
                    <label class="form-check-label" for="play_styles_list_combination_operation_or">Or</label>
                </div>
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.Filter.PlayStylesCombinationOperation, "None", new
                    {@class="form-check-input", @id="play_styles_list_combination_operation_none"})
                    <label class="form-check-label" for="play_styles_list_combination_operation_none">None</label>
                </div>
            </div>
        </div>
        <div class="input-group mb-3">
            <input class="form-control btn btn-outline-primary" type="submit" value="Filter" />
        </div>
    </form>
    <form>
        <button class="form-control btn btn-outline-secondary" asp-page="./Index"
            asp-page-handler="ClearFilter">Clear</button>
    </form>
</div>
<div style="display: @filterPromptDisplay">
    <button class="btn btn-outline-primary"
        onclick="document.getElementById('filter-box').style.display='block'; this.style.display='none'">Filter...</button>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Game.First().Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Game.First().Location)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Game.First().PrimaryMechanic)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Game.First().Complexity)
            </th>
            <th>
                Players
            </th>
            <th>
                Play Time
            </th>
            <th>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Game)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                    @if (!string.IsNullOrEmpty(item.PictureUrl))
                    {
                        <img class="bgdb-thumbnail" src="@item.PictureUrl" />
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Location)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PrimaryMechanic.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Complexity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MinimumPlayerCount)
                    @if (item.MinimumPlayerCount != item.MaximumPlayerCount)
                    {
                        <span>-</span>
                        @Html.DisplayFor(modelItem => item.MaximumPlayerCount)
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MinimumPlayTimeMinutes)
                    @if (item.MinimumPlayTimeMinutes == item.MaximumPlayTimeMinutes)
                    {
                    }
                    else
                    {
                        <span>-</span>
                        @Html.DisplayFor(modelItem => item.MaximumPlayTimeMinutes)
                    }
                    @if (item.MinimumPlayTimeMinutes == 1)
                    {
                        <span>Minute</span>
                    }
                    else
                    {
                        <span>Minutes</span>
                    }
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts{

<script>
    $(function () {
        var mechanics = @Json.Serialize(Model.Mechanics);
        var playStyles = @Json.Serialize(Model.PlayStyles);
        setTabComplete("filter_mechanics_list", "filter_mechanics_list_suggestion", mechanics, ";");
        setTabComplete("filter_play_styles_list", "filter_play_styles_list_suggestion", playStyles, ";");
    });
</script>
}
