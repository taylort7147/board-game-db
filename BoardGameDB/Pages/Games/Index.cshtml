@page
@model BoardGameDB.Pages_Games.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a class="btn btn-primary bgdb-center" asp-page="Create">Create New</a>
</p>

@{
    var filterDisplay = Model.Filter.IsDirty ? "block" : "none";
    var filterPromptDisplay = Model.Filter.IsDirty ? "none" : "block";
}
<div id="filter-box" class="bgdb-form-container" style="display: @filterDisplay">
    <form>
        <div class="input-group mb-3">
            <label class="input-group-text">Title</label>
            <input class="form-control" type="text" asp-for="Filter.Title" />
        </div>
        <div class="input-group mb-3">
            <span class="input-group-text">Complexity</span>
            <select class="form-control bgdb-min" asp-for="Filter.ComplexityString" asp-items="@Model.ComplexityListItems"></select>
        </div>
        <div class="input-group mb-3">
            <span class="input-group-text">Player Count</span>
            <input class="form-control bgdb-min" type="number" asp-for="Filter.PlayerCount" />
        </div>
        <div class="input-group mb-3">
            <span class="input-group-text">Play Time</span>
            <select class="form-control bgdb-min" type="number" asp-for="Filter.PlayTimeRangeString" asp-items="Model.Filter.PlayTimeRangeListItems"></select>
        </div>
        <div class="input-group mb-3">
            <input class="form-control btn btn-outline-primary" type="submit" value="Filter" />
        </div>  
    </form>
    <form>
        <button class="form-control btn btn-outline-secondary" asp-page="./Index" asp-page-handler="ClearFilter">Clear</button>
    </form> 
</div>
<div style="display: @filterPromptDisplay">
    <button class="btn btn-outline-primary" onclick="document.getElementById('filter-box').style.display='block'; this.style.display='none'">Filter...</button>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Game[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Game[0].Location)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Game[0].Complexity)
            </th>
            <th>
                Players
            </th>
            <th>
                Play Time
            </th>
            <th>                
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Game) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ComplexityString)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MinimumPlayerCount)
                @if(item.MinimumPlayerCount != item.MaximumPlayerCount)
                {
                    <span>-</span>
                    @Html.DisplayFor(modelItem => item.MaximumPlayerCount)
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MinimumPlayTimeMinutes)
                @if(item.MinimumPlayTimeMinutes == item.MaximumPlayTimeMinutes)
                {
                }
                else
                {
                    <span>-</span>
                    @Html.DisplayFor(modelItem => item.MaximumPlayTimeMinutes)
                }            
                @if(item.MinimumPlayTimeMinutes == 1)
                {
                    <span>Minute</span>
                }
                else
                {
                    <span>Minutes</span>
                }
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
