// <auto-generated />
using System;
using BoardGameDB.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BoardGameDB.Migrations
{
    [DbContext(typeof(BoardGameDBContext))]
    partial class BoardGameDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("BoardGameDB.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BoardGameGeekUrl")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Complexity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<int>("MaximumPlayTimeMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaximumPlayerCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinimumPlayTimeMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinimumPlayerCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("RulesUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("RulesVideoUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("BoardGameDB.Models.GameType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("GameType");
                });

            modelBuilder.Entity("BoardGameDB.Models.Mechanic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Mechanic");
                });

            modelBuilder.Entity("BoardGameDB.Models.PlayStyle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PlayStyle");
                });

            modelBuilder.Entity("BoardGameDB.Models.GameType", b =>
                {
                    b.HasOne("BoardGameDB.Models.Game", null)
                        .WithMany("GameTypes")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("BoardGameDB.Models.Mechanic", b =>
                {
                    b.HasOne("BoardGameDB.Models.Game", null)
                        .WithMany("Mechanics")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("BoardGameDB.Models.Game", b =>
                {
                    b.Navigation("GameTypes");

                    b.Navigation("Mechanics");
                });
#pragma warning restore 612, 618
        }
    }
}
